version: "3.9"

services:
    traefik:
        image: traefik:v2.9
        container_name: traefik
        command:
            - --api.insecure=true
            - --providers.docker=true
            - --entrypoints.web.address=:80
            # - --entrypoints.websecure.address=:443
            # - --certificatesresolvers.myresolver.acme.tlschallenge=true
            # - --certificatesresolvers.myresolver.acme.email=dsarifkulo021@gmail.com
            # - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
        ports:
            - "80:80"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            # - ./traefik_data:/letsencrypt
        networks:
            - dropin
    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        container_name: backend
        networks:
            - dropin
        ports:
            - "8080:8080"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
            - "traefik.http.routers.backend.entrypoints=web"
            - "traefik.http.middlewares.backend-stripprefix.stripprefix.prefixes=/api"
            - "traefik.http.routers.backend.middlewares=backend-stripprefix"
            - "traefik.http.services.backend.loadbalancer.server.port=8080"
        environment:
            - ENV=production
            - jwt_secret=${jwt_secret}
            - DATABASE_URL=${DATABASE_URL}
        depends_on:
            db:
                condition: service_healthy

        volumes:
            - ./uploads_host:/app/uploads

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
            args:
                - VITE_API_URL=$VITE_API_URL
        container_name: frontend
        environment:
            - VITE_API_URL=$VITE_API_URL
        networks:
            - dropin
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.frontend.rule=PathPrefix(`/`) && !PathPrefix(`/api`, `/warehouse`, `/seller`)"
            - "traefik.http.routers.frontend.entrypoints=web"
            - "traefik.http.middlewares.frontend-stripprefix.stripprefix.prefixes=/"
            - "traefik.http.routers.frontend.middlewares=frontend-stripprefix"
            - "traefik.http.services.frontend.loadbalancer.server.port=3000"
        # ports:
        #     - "3000:3000"
        depends_on:
            - backend
    warehouse:
        build:
            context: ./warehouse
            dockerfile: Dockerfile
            args:
                - VITE_API_URL=$VITE_API_URL
        container_name: warehouse
        environment:
            - VITE_API_URL=$VITE_API_URL
        networks:
            - dropin
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.warehouse.rule=PathPrefix(`/warehouse`)"
            - "traefik.http.routers.warehouse.entrypoints=web"
            - "traefik.http.middlewares.warehouse-stripprefix.stripprefix.prefixes=/warehouse"
            - "traefik.http.middlewares.warehouse-replacepath.replacepathregex.regex=^/warehouse/(.*)"
            - "traefik.http.middlewares.warehouse-replacepath.replacepathregex.replacement=/$1"
            - "traefik.http.routers.warehouse.middlewares=warehouse-stripprefix,warehouse-replacepath"
            - "traefik.http.services.warehouse.loadbalancer.server.port=3001"
        # ports:
        #     - "3001:3001"
        depends_on:
            - backend

    seller:
        build:
            context: ./seller
            dockerfile: Dockerfile
            args:
                - VITE_API_URL=$VITE_API_URL
        container_name: seller
        environment:
            - VITE_API_URL=$VITE_API_URL
        networks:
            - dropin
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.seller.rule=PathPrefix(`/seller`)"
            - "traefik.http.routers.seller.entrypoints=web"
            - "traefik.http.middlewares.seller-stripprefix.stripprefix.prefixes=/seller"
            - "traefik.http.middlewares.seller-replacepath.replacepathregex.regex=^/seller/(.*)"
            - "traefik.http.middlewares.seller-replacepath.replacepathregex.replacement=/$1"
            - "traefik.http.routers.seller.middlewares=seller-stripprefix,seller-replacepath"
            - "traefik.http.services.seller.loadbalancer.server.port=3002"
        # ports:
        #     - "3002:3002"
        depends_on:
            - backend

    db:
        image: postgres:15-alpine
        container_name: postgres
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        networks:
            - dropin
        volumes:
            - postgres_data:/var/lib/postgresql/data
        ports:
            - "5433:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
            interval: 10s
            timeout: 5s
            retries: 5

volumes:
    postgres_data:

networks:
    dropin:
        driver: bridge
